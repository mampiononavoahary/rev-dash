
name: Check Vercel Deployment Status

on:
  workflow_dispatch:

jobs:
  check-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Get latest production deployment
        id: get_deployment
        run: |
          DEPLOYMENT=$(curl -s -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            "https://api.vercel.com/v6/deployments?projectId=${{ secrets.VERCEL_PROJECT_ID }}&limit=5" \
            | jq -c '.deployments[] | select(.target == "production")' | head -n 1)

          DEPLOYMENT_ID=$(echo "$DEPLOYMENT" | jq -r '.uid')

          echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT
          echo "üü° Checking deployment ID: $DEPLOYMENT_ID"

      - name: Wait for deployment to be ready
        run: |
          DEPLOYMENT_ID=${{ steps.get_deployment.outputs.deployment_id }}

          if [ "$DEPLOYMENT_ID" = "null" ] || [ -z "$DEPLOYMENT_ID" ]; then
            echo "‚ùå No deployment ID found."
            exit 1
          fi

          for i in {1..30}; do
            STATUS=$(curl -s -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              "https://api.vercel.com/v13/deployments/$DEPLOYMENT_ID" | jq -r '.readyState')

            echo "‚è≥ Current status: $STATUS"

            if [ "$STATUS" = "READY" ]; then
              echo "‚úÖ Deployment successful!"
              exit 0
            elif [ "$STATUS" = "ERROR" ]; then
              echo "‚ùå Deployment failed!"
              exit 1
            fi

            sleep 10
          done

          echo "‚ùå Timeout waiting for deployment"
          exit 1

      - name: Get production domain
        run: |
          DOMAIN=$(curl -s -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            "https://api.vercel.com/v9/projects/rev-dash/domains" \
            | jq -r '.domains[] | select(.verified == true) | .name' | head -n 1)

          if [ -z "$DOMAIN" ]; then
            echo "‚ùå No production domain found."
            exit 1
          fi

          echo "‚úÖ Production domain: https://$DOMAIN"

